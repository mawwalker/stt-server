version: '3.8'

services:
  websocket-asr-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: websocket-asr-server
    ports:
      - "8000:8000"
    environment:
      - MODELS_ROOT=/app/assets
      - PORT=8000
      - THREADS=2
      - LOG_LEVEL=INFO
    volumes:
      # 如果您想要挂载本地模型文件，可以取消注释下面的行
      # - ./assets:/app/assets:ro
      # 如果您想要持久化日志，可以取消注释下面的行
      # - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    # 资源限制 (可选)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # 可选：添加一个 nginx 反向代理
  # nginx:
  #   image: nginx:alpine
  #   container_name: asr-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - websocket-asr-server
  #   restart: unless-stopped

networks:
  default:
    name: asr-network
